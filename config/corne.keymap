/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
    tapping-term-ms = <180>;
    quick-tap-ms = <0>;
};

&lt { tapping-term-ms = <150>; };

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        bs_del: bs_del {
            compatible = "zmk,behavior-mod-morph";
            label = "Backspace and Delete";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt_clear_2: bt_clear_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "Double Tap: BT Clear";
            #binding-cells = <0>;
            bindings = <&none>, <&bt BT_CLR>;

            tapping-term-ms = <200>;
        };

        to_util_layer: to_util_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "TO_UTIL_LAYER";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT>, <&to 4>;
        };

        right_hrm: right_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <36 37 38 39 40 41 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
            hold-trigger-on-release;
        };

        left_hrm: left_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };
    };

    macros {
        mac_lang: mac_lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F13>;
            label = "MAC_LANG";
        };

        mac_ss: mac_ss {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(A))>;
            label = "MAC_SS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main_layer {
            bindings = <
&kp TAB     &kp Q              &kp W              &kp E                  &kp R             &kp T          &kp Y        &kp U              &kp I              &kp O               &kp P                  &bs_del
&caps_word  &left_hrm RCTRL A  &left_hrm LSHFT S  &left_hrm RIGHT_ALT D  &left_hrm LGUI F  &kp G          &kp H        &right_hrm RGUI J  &right_hrm RALT K  &right_hrm LSHFT L  &right_hrm RCTRL SEMI  &kp SQT
&kp LCTRL   &kp Z              &kp X              &kp C                  &kp V             &kp B          &kp N        &kp M              &kp COMMA          &kp DOT             &kp FSLH               &kp ESC
                                                  &kp LSHFT              &kp TAB           &lt 3 ENTER    &lt 4 SPACE  &bs_del            &to_util_layer
            >;
        };

        num_layer {
            bindings = <
&trans  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5         &kp N6    &kp N7     &kp N8     &kp N9     &kp N0     &trans
&trans  &kp LCTRL  &kp LSHFT  &kp LALT  &kp LGUI  &trans         &kp PLUS  &kp MINUS  &kp UNDER  &kp EQUAL  &kp ASTRK  &trans
&trans  &trans     &trans     &trans    &trans    &bt_clear_2    &trans    &trans     &trans     &trans     &trans     &trans
                              &trans    &trans    &trans         &trans    &trans     &trans
            >;
        };

        nav_layer {
            bindings = <
&trans   &trans     &trans     &trans    &trans    &trans    &trans    &trans     &trans     &trans     &trans  &trans
&trans   &kp LCTRL  &kp LSHFT  &kp LALT  &kp LGUI  &trans    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans  &trans
&kp ESC  &trans     &trans     &trans    &trans    &trans    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans  &trans
                               &trans    &trans    &trans    &trans    &trans     &trans
            >;
        };

        sym_layer {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT      &kp CARET  &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp LCTRL        &kp LSHFT    &kp LALT   &kp LGUI    &trans           &kp PLUS   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans  &trans           &trans       &trans     &kp PIPE    &kp BACKSLASH    &kp EQUAL  &kp MINUS         &kp UNDER          &kp MINUS             &kp TILDE              &trans
                                      &trans     &trans      &trans           &trans     &trans            &trans
            >;
        };

        util_layer {
            bindings = <
&trans  &kp C_PREV    &kp C_MUTE    &kp C_VOL_DN   &kp C_VOL_UP   &kp C_NEXT     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &mac_ss        &mac_lang      &kp C_PP       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &kp C_BRI_DEC  &kp C_BRI_INC  &bt_clear_2    &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans         &trans         &trans         &trans  &trans  &trans
            >;
        };
    };
};
