/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        bs_del: bs_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BS_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ALT_BS_DEL: ALT_BS_DEL {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_BS_DEL";
            bindings = <&mt RIGHT_ALT BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans                   &kp Q  &kp W  &kp E     &kp R             &kp T          &kp Y        &kp U        &kp I      &kp O    &kp P     &trans
&mt LEFT_SHIFT CAPSLOCK  &kp A  &kp S  &kp D     &kp F             &kp G          &kp H        &kp J        &kp K      &kp L    &kp SEMI  &mt RIGHT_SHIFT SQT
&kp LCTRL                &kp Z  &kp X  &kp C     &kp V             &kp B          &kp N        &kp M        &kp COMMA  &kp DOT  &kp FSLH  &mt RCTRL ESCAPE
                                       &kp LGUI  &mt LEFT_ALT TAB  &lt 1 ENTER    &lt 2 SPACE  &ALT_BS_DEL  &to 3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1        &kp N2        &kp N3         &kp N4         &kp N5          &kp N6             &kp N7        &kp N8  &kp N9     &kp N0           &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4    &kp LEFT           &kp DOWN      &kp UP  &kp RIGHT  &kp PRINTSCREEN  &trans
&trans  &kp HOME      &kp END       &kp C_BRI_DEC  &kp C_BRI_INC  &bt BT_CLR      &kp C_VOLUME_DOWN  &kp C_VOL_UP  &trans  &trans     &trans           &trans
                                    &trans         &trans         &trans          &trans             &kp K_MUTE    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT      &kp CARET  &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp GRAVE        &kp TILDE    &kp MINUS  &kp UNDER   &kp EQUAL        &kp PLUS   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans  &trans           &trans       &trans     &kp PIPE    &kp BACKSLASH    &trans     &trans            &trans             &trans                &trans                 &trans
                                      &trans     &trans      &trans           &trans     &trans            &trans
            >;
        };

        num_layer {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &kp N1  &kp N2  &kp N3   &kp MINUS  &kp SLASH     &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &kp N4  &kp N5  &kp N6   &kp PLUS   &kp ASTERISK  &kp SPACE
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &kp N7  &kp N8  &kp N9   &kp EQUAL  &kp DEL       &trans
                         &to 0    &trans   &trans    &trans  &kp N0  &kp DOT
            >;
        };
    };
};
