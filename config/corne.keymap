/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <150>;
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Alt_F4 {
            bindings = <&kp LA(F4)>;
            key-positions = <0 11>;
        };
    };

    behaviors {
        bs_del: bs_del {
            compatible = "zmk,behavior-mod-morph";
            label = "Backspace and Delete";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bs_del_alt: bs_del_alt {
            compatible = "zmk,behavior-mod-morph";
            label = "Tap: bs_del, Hold: Alt";
            bindings = <&mt RIGHT_ALT BACKSPACE>, <&mt RIGHT_ALT DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hold_layer: hold_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold; Change Layer";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        bs_del_gui: bs_del_gui {
            compatible = "zmk,behavior-mod-morph";
            label = "Tap: bs_del, Hold: Gui";
            bindings = <&mt RIGHT_GUI BACKSPACE>, <&mt RIGHT_ALT DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mac_caps_mod: mac_caps_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "Tap: Mac Caps, Hold: Mod";
            bindings = <&kp>, <&mac_caps_macro>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
        };

        hold_bt: hold_bt {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold: BT";
            bindings = <&bt>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        bt_clear_2: bt_clear_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "Double Tap: BT Clear";
            #binding-cells = <0>;
            bindings = <&none>, <&bt BT_CLR>;

            tapping-term-ms = <200>;
        };
    };

    macros {
        mac_caps_macro: caps {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap_time 100>, <&kp CAPSLOCK>;

            label = "CAPS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        win_layer {
            bindings = <
&kp TAB              &kp Q  &kp W  &kp E     &kp R             &kp T          &kp Y        &kp U        &kp I                    &kp O    &kp P     &bs_del
&mt LEFT_SHIFT CAPS  &kp A  &kp S  &kp D     &kp F             &kp G          &kp H        &kp J        &kp K                    &kp L    &kp SEMI  &mt RIGHT_SHIFT SQT
&kp LCTRL            &kp Z  &kp X  &kp C     &kp V             &kp B          &kp N        &kp M        &kp COMMA                &kp DOT  &kp FSLH  &mt RCTRL ESCAPE
                                   &kp LGUI  &mt LEFT_ALT TAB  &lt 2 ENTER    &lt 4 SPACE  &bs_del_alt  &hold_layer 5 BACKSPACE
            >;
        };

        mac_layer {
            bindings = <
&trans                  &trans  &trans  &trans        &trans        &trans         &trans  &trans       &trans                   &trans  &trans  &trans
&mac_caps_mod LSHIFT 0  &trans  &trans  &trans        &trans        &trans         &trans  &trans       &trans                   &trans  &trans  &trans
&trans                  &trans  &trans  &trans        &trans        &trans         &trans  &trans       &trans                   &trans  &trans  &trans
                                        &kp LEFT_ALT  &mt LGUI TAB  &lt 3 ENTER    &trans  &bs_del_gui  &hold_layer 6 BACKSPACE
            >;
        };

        win_lower_layer {
            bindings = <
&trans  &kp N1        &kp N2        &kp N3         &kp N4         &kp N5         &kp N6      &kp N7             &kp N8        &kp N9        &kp N0           &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3   &to 1          &kp LEFT    &kp DOWN           &kp UP        &kp RIGHT     &kp PRINTSCREEN  &trans
&trans  &kp HOME      &kp END       &kp C_BRI_DEC  &kp C_BRI_INC  &bt_clear_2    &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &out OUT_TOG  &kp LG(SPACE)    &trans
                                    &trans         &trans         &trans         &trans      &trans             &trans
            >;
        };

        mac_lower_layer {
            bindings = <
&trans  &kp N1        &kp N2        &kp N3         &kp N4         &kp N5         &kp N6      &kp N7             &kp N8        &kp N9        &kp N0                &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3   &to 0          &kp LEFT    &kp DOWN           &kp UP        &kp RIGHT     &kp LG(LS(NUMBER_4))  &trans
&trans  &kp HOME      &kp END       &kp C_BRI_DEC  &kp C_BRI_INC  &bt_clear_2    &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &out OUT_TOG  &kp LA(SPACE)         &trans
                                    &trans         &trans         &trans         &trans      &trans             &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT      &kp CARET  &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp GRAVE        &kp TILDE    &kp MINUS  &kp UNDER   &kp EQUAL        &kp PLUS   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans  &trans           &trans       &trans     &kp PIPE    &kp BACKSLASH    &trans     &trans            &trans             &trans                &trans                 &trans
                                      &trans     &trans      &trans           &trans     &trans            &trans
            >;
        };

        win_num_layer {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &kp N1  &kp N2  &kp N3             &kp MINUS  &kp SLASH     &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &kp N4  &kp N5  &kp N6             &kp PLUS   &kp ASTERISK  &kp SPACE
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &kp N7  &kp N8  &kp N9             &kp EQUAL  &kp DEL       &trans
                         &trans   &trans   &trans    &trans  &kp N0  &hold_layer 0 DOT
            >;
        };

        mac_num_layer {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &kp N1  &kp N2  &kp N3             &kp MINUS  &kp SLASH     &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &kp N4  &kp N5  &kp N6             &kp PLUS   &kp ASTERISK  &kp SPACE
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &kp N7  &kp N8  &kp N9             &kp EQUAL  &kp DEL       &trans
                         &trans   &trans   &trans    &trans  &kp N0  &hold_layer 1 DOT
            >;
        };
    };
};
